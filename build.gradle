buildscript {
    repositories {
        mavenCentral()
        maven {
          url "https://plugins.gradle.org/m2/"
        }
        jcenter()
        eventuateMavenRepoUrl.split(',').each { repoUrl -> maven { url repoUrl } }
    }
    dependencies {
        classpath "io.eventuate.plugins.gradle:eventuate-plugins-gradle-publish:$eventuatePluginsGradleVersion"
    }
}

allprojects {
    group = "io.eventuate.util"
}
apply plugin: "io.eventuate.plugins.gradle.publish.EventuatePublish"


subprojects {
    sourceCompatibility = 17
    targetCompatibility = 17

    repositories {
        mavenCentral()
        jcenter()
        eventuateMavenRepoUrl.split(',').each { repoUrl -> maven { url repoUrl } }
    }

    if (!project.name.endsWith("-bom")) {
        dependencies {
            testImplementation "org.mockito:mockito-core:4.11.0"
        }
    }

}




gradle.projectsEvaluated {
    task aggregateJavaDocs(type: Javadoc) {
        description = 'Aggregated Javadoc API documentation of all subprojects.'
        group = JavaBasePlugin.DOCUMENTATION_GROUP

        destinationDir file("$buildDir/docs/javadoc")
    }
}

configurations.all {
    resolutionStrategy.cacheDynamicVersionsFor 10, 'minutes'
}
tasks.withType(Test).configureEach {
    useJUnitPlatform()
}
